using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.IO;
using UnityEngine.SceneManagement;

public class Interpreter : MonoBehaviour
{
    Dictionary<string, string> colors = new Dictionary<string, string>()
    {
        {"preto", "#021b21"},
        {"cinza", "#555d71"},
        {"vermelho", "#ff5879"},
        {"amarelo", "#f2f1b9"},
        {"azul", "#9ed9d8"},
        {"roxo", "#d926ff"},
        {"laranja", "#ef5847"},
        {"verde", "#00fa00"}
    };

    List<string> response = new List<string>();

    public List<string> Interpret(string userInput)
    {
        response.Clear();

        string[] args = userInput.Split();


        if(args[0] == "158042") 
        {
            LoadTitle("ascii.txt", "vermelho", 2);

            
             response.Add("Você está prestes a iniciar um jogo de Hacking baseado em Capture The Flag (CTF).");
             response.Add("CTF é uma competição onde o jogador precisa resolver uma série de desafios para hackear uma simulação de sistema.");
             ListEntry("Aviso", "Fique atento nas instruções do jogo");
             response.Add("\r\n");
             response.Add("Digite '/ajuda' para mais informações.");
             response.Add("Digite '/iniciar' para começar o jogo.");
             response.Add("Boa sorte!");

            return response;
        }

        if(args[0] == "/iniciar")
        {
            response.Add("> O seu alvo é o Banco Nacional de Cyberfield e seu objetivo é protegê-lo."); 
            response.Add("> Você precisa responder 4 flags de hacking para entregar o relatório completo.");
            response.Add("> Tente descobrir quantas portas (redes) estão abertas no servidor, ou seja, execute um 'Port Scanner'(Escaneador de portas).");
            response.Add("> Existe uma ferramenta de hacking muito famosa chamada 'Nmap' para realizar isso.");
            response.Add("\r\n");
            response.Add("Digite 'instalar>nmap' para continuar...");

            return response;
        }

        if(args[0] == "instalar>nmap")
        {
            LoadTitle("asciinmap.txt", "azul", 2);
            response.Add("> O Nmap (Network Mapper) é capaz de analisar a disponibilidade das portas que podem ser usadas para acessar dispositivos ou uma rede.");
            response.Add("> O seu alvo possui o seguinte endereço de IP: 162.241.42.60");
            ListEntry("Aviso 1", "Não esqueça desse endereço de IP. Digite '/ip' caso precise.");
            ListEntry("Aviso 2", "A partir de agora, siga os formatos de comandos indicados abaixo.");
            response.Add("\r\n");
            ListEntry("Formato do comando", "nmap>IP_DO_BANCO");

            return response;
        }

        
        if(args[0] == "nmap>162.241.42.60")
        {
            response.Add("Inicializando o Nmap...");
            response.Add("Escaneando possíveis portas...");
            response.Add("Escaneando possíveis serviços...");
            response.Add("Mapeamento do alvo finalizado.");
            response.Add("\r\n");
            //response.Add("ftp-anon: Login usuário anônimo de FTP permitido");
            response.Add("PORTA     ESTADO    SERVIÇO");
            response.Add("21        ABERTO    FTP");
            response.Add("23        FECHADO   TELNET");
            response.Add("25        FECHADO   SMTP");
            response.Add("70        FECHADO   GOPHER");
            response.Add("80        ABERTO    HTTP");
            response.Add("2222      ABERTO    SSH");

            response.Add("\r\n");
            response.Add("Digite 'flag:1' para responder a primeira atividade...");

            return response;
        }

        if(args[0] == "flag:1")
        {
            response.Add("> 1. Quantos serviços estão abertos abaixo de portas equivalentes à 1000?");
            response.Add("> 2. Qual serviço está aberto na maior porta?");

            response.Add("\r\n");
            ListEntry("Formato do comando", "flag:1>RESPOSTA1(número),RESPOSTA2(maiúsculo)");
            return response;
        }

        if(args[0] =="flag:1>2,SSH")
        {
            response.Add("> Muito bem, Pentester!");
            response.Add("> Agora você precisa analisar o arquivo de configuração do FTP do sistema do Banco Cyberfield.");
            response.Add("\r\n");
            response.Add("Digite 'ftp>info' para mais informações...");

            return response;
        }

        if(args[0] == "ftp>info")
        {
            response.Add("> FTP (File Transfer Protocol), em português, significa Protocolo de Transferência de Arquivos.");
            response.Add("> Possui uma arquitetura 'cliente-servidor', ou seja, na rede existem os fornecedores de recursos ou serviços, que são chamados de servidores...");
            response.Add("> E existem os requerentes dos recursos ou serviços, denominados clientes.");
            response.Add("> O banco permitiu acesso anônimo na configuração para alguns arquivos do sistema. Segue o recorte abaixo:");
            response.Add("\r\n");
            response.Add("ftp-anon: Login 'usuário: anonymous' permitido");
            response.Add("PORTA     ESTADO    SERVIÇO");
            response.Add("21        ABERTO    FTP");
            response.Add("\r\n");
            response.Add("> Isso era muito usado antigamente em trocas de arquivos com alunos acessando como usuário anônimo em sistemas de universidades, por exemplo.");
            response.Add("> Mas hoje em dia, isso pode ser uma grande falha de segurança. Uma vulnerabilidade.");
            response.Add("\r\n");
            response.Add("Digite 'ftp>config' para continuar...");

            return response;
        }

        
        if(args[0] == "ftp>config")
        {
            response.Add("> Lembre-se: é importante quando for habilitar o FTP no sistema, olhar o arquivo de configuração pra não deixar o sistema exposto.");
            response.Add("> Segue abaixo outro recorte de arquivo de configuração presente no Banco Cyberfield:");
            response.Add("\r\n");
            response.Add("1. escutar_ftp = SIM");
            response.Add("2. escutar_ipv6 = SIM");
            response.Add("3. permitir_local = SIM");
            response.Add("4. permitir_anonimo = SIM");
            response.Add("5. permitir_escrever = SIM");
            response.Add("6. mascara_local = 022");
            response.Add("....");
            response.Add("\r\n");

            response.Add("Digite 'flag:2' para responder a segunda atividade...");

            return response;
        }

        if(args[0] == "flag:2")
        {   
            response.Add("> 1. Qual a linha em que indica que a configuração do FTP possui o acesso anônimo permitido?");
            response.Add("> 2. Que tipo de arquitetura o FTP utiliza?");
            response.Add("\r\n");

            ListEntry("Formato do comando", "flag:2>RESPOSTA1(número),RESPOSTA2(maiúsculo)");
            return response;
        }

                
        if(args[0] == "flag:2>4,CLIENTE-SERVIDOR")
        {   
            response.Add("> Ótimo trabalho!");
            response.Add("> Seu próximo desafio é acessar o FTP do Banco Cyberfield com a vulnerabilidade encontrada nos recortes acima.");

            response.Add("\r\n");
            ListEntry("Formato do comando", "ftp>IP_DO_BANCO");
            return response;
        }
        
        
        if(args[0] == "ftp>162.241.42.60")
        {   
            response.Add("Conectado à 162.241.42.60");
            response.Add("\r\n");
            response.Add("Insira o usuário:");
            return response;
        }

        if(args[0] == "anonymous")
        {
            response.Add("Login bem sucedido.");
            response.Add("Sistema remoto ativado.");
            response.Add("Usando modo binário para transferir arquivos.");
            response.Add("Listando todos os diretórios permitidos.");
            response.Add("\r\n");
            response.Add("Fev 25 | 2022 | pub");
            //response.Add("drwxr-xr-x  |  2 ftp  |  ftp  |  4096 Fev 25  2022 pub");
            response.Add("\r\n");
            ListEntry("Aviso", "Você encontrou um diretório 'pub'");
            response.Add("\r\n");
            ListEntry("Formato do comando", "ftp>cd/DIRETÓRIO");

            return response;
        }

        if(args[0] == "ftp>cd/pub")
        {
            response.Add("Listando todos os arquivos permitidos.");
            response.Add("\r\n");
            response.Add("Fev 25 | 2022 | admin.db");
            //response.Add("-rw-r--r--  |  1 ftp  |  ftp  |  166 Fev 25  2022 lembrete.txt");
            response.Add("\r\n");
            ListEntry("Formato do comando", "ftp>cd/ARQUIVO");
            
            return response;
        }

        if(args[0] == "ftp>cd/admin.db") 
        {
            response.Add("\r\n");
            ListEntry("Aviso", "Você encontrou um arquivo com login dos funcionários do banco e suas senhas criptografadas em MD5");
            response.Add("> Existem diferentes tipos de criptografias, algumas podem ser usadas para garantir que apenas as partes envolvidas consigam entender o conteúdo...");
            response.Add("> E também existem métodos que criam um código único irreversível para validar a integridade ou garantir confidencialidade de senhas.");
            response.Add("> Esse último método é o caso das funções de 'hash' que tem como exemplo o algoritmo MD5.");
            response.Add("> O arquivo que você encontrou possui a seguinte informação:");
            response.Add("\r\n");
            response.Add("/admin.db");
            response.Add("\r\n");
            response.Add("USUÁRIO             SENHA");
            response.Add("edna_BNC            038167be22c199f28d2af1a6a30a8552");
            response.Add("anastacia_BNC       1ddff545424249df81f3c4ab552dbb3d");
            response.Add("alfred_BNC          SwitChan90");   
            response.Add("rafael_BNC          4bc6567955a75df395ba4fc9912e32c0");
            response.Add("ivan_BNC            5e50c6c2726dc56de28836d01a9f1a31");
            response.Add("nicole_BNC          8f3f07c9f13f5f85d42c5e08d17163aa");

            response.Add("\r\n");
            response.Add("Digite 'instalar>md5' para continuar...");
            return response;
        }

        if(args[0] == "instalar>md5")
        {
            LoadTitle("MD5ASCII.txt", "azul", 2);
            response.Add("> Utilizando essa ferramenta você consegue criptografar uma senha em MD5, siga o exemplo abaixo:");
            response.Add("\r\n");
            response.Add("Senha em texto claro:");
            response.Add("Sparrow1993");
            response.Add("\r\n");
            response.Add("Criptografando em MD5:");
            response.Add("COMANDO:      md5>Sparrow1993");
            response.Add("SENHA MD5:    eb0b935b127123842f4d644b9304e0bb");
            response.Add("\r\n");
            response.Add("> Lembre-se: No uso de senhas criptografadas com funções 'hash', é necessário entrar com a senha em texto claro para validar o acesso no sistema.");
            response.Add("\r\n");
            response.Add("Digite 'flag:3' para responder a terceira atividade...");

            return response;
        }


        if(args[0] == "flag:3")
        {

            response.Add("> Explore o arquivo '/admin.db' e converta a senha em texto claro para MD5.");
            response.Add("\r\n");
            response.Add("Insira a hash:");
            ListEntry("Aviso", "Todos os caracteres devem ser exatos.");
            ListEntry("Formato do comando", "flag:3>HASH");
            return response;
        }

        if(args[0] == "md5>SwitChan90")
        {
            response.Add("Md5(SwitChan90) = 05ff09e4f69da1ed30588703ec68b943");
            response.Add("\r\n");
            return response;
        }

        if(args[0] == "flag:3>05ff09e4f69da1ed30588703ec68b943")
        {
            response.Add("> Ótimo trabalho! Chegamos no desafio final.");
            response.Add("> Agora conecte via SSH para acessar o servidor do Banco Cyberfield.");
            response.Add("\r\n");
            response.Add("Digite 'ssh>info' para mais informações...");
            return response;
        }

        if(args[0] == "ssh>info")
        {
            response.Add("> O SSH (Secure Shell) é um protocolo que permite o acesso remoto à um servidor, implementando algum nível de segurança.");
            response.Add("> É possivel editar, configurar e criar/deletar arquivos de acordo com a permissão do usuário.");
            response.Add("> Para acessar é necessário se conectar ao servidor com usuário e senha.");
            response.Add("\r\n");
            response.Add("Digite 'ssh>login' para conectar...");
            return response;
        }

        if(args[0] == "ssh>login")
        {
            ListEntry("Dica", "Utilize as informações que estão vulneráveis nos arquivos já encontrados.");
            response.Add("\r\n");
            response.Add("Insira o usuário e endereço de IP:");
            ListEntry("Formato do comando", "ssh>USUARIO@IP");

            return response;
        }
        
        if(args[0] == "ssh>alfred_BNC@162.241.42.60")
        {
            response.Add("\r\n");
            response.Add("Conectado à alfred_BNC@162.241.42.60:2222");
            ListEntry("Aviso", "Você precisa se autenticar para prosseguir com a conexão.");
            response.Add("\r\n");
            response.Add("Insira a senha:");
            ListEntry("Formato do comando", "ssh>SENHA");
            return response;
        }

        if(args[0] == "ssh>SwitChan90")
        {
            response.Add("\r\n");
            response.Add("Bem-vindo ao sistema operacional 'Ubuntu' 18.04 LTS (GNU/Linux)");
            response.Add("\r\n");
            response.Add("INFORMAÇÃO DO SISTEMA");
            response.Add("\r\n");
            response.Add("Memória Usada: 13%");
            response.Add("Processos: 114");
            response.Add("Usuários logados: 1");
            response.Add("Endereço de IP: 162.241.42.60");
            response.Add("\r\n");
            response.Add("28 pacotes podem ser atualizados");
            response.Add("0 atualizações são atualizações de segurança");
            response.Add("\r\n");
            response.Add("***Reinicialização do sistema necessária***");
            response.Add("\r\n");
            response.Add("> É importante ter em mente que, diariamente, são descobertas falhas e brechas de segurança nos sistemas operacionais.");
            response.Add("> Caso a atualização seja ignorada, você corre o risco de ter seus dados corrompidos e levando a perda de trabalhos que não foram salvos.");
            response.Add("Digite '/pwd' para mostrar os diretórios atuais");
            return response;
        }

        if(args[0] == "/pwd")
        {
            response.Add("\r\n");
            response.Add("/home/alfred_BNC:");
            response.Add("\r\n");
            response.Add("Desktop | Documentos | Downloads | comandos.txt");
            response.Add("\r\n");
            ListEntry("Formato do comando", "cd>ARQUIVO");
            return response;
        }

        if(args[0] == "cd>comandos.txt")
        {
            response.Add("\r\n");
            ListEntry("sudo", "acesso com permissões de administrador do sistema");
            ListEntry("getupdate", "lista os pacotes");
            ListEntry("getupgrade", " faz a atualização dos pacotes");
            ListEntry("ls", "listar diretórios");
            ListEntry("pwd", "mostra diretório atual");
            response.Add("\r\n");
            response.Add("Digite 'flag:4' para responder a última atividade...");
            return response;
        }
        if(args[0] == "flag:4")
        {
            response.Add("> 1. Qual o sistema operacional do sistema do Banco Cyberfield?");
            response.Add("> 2. Qual o comando que executa a atualização do sistema?");
            response.Add("\r\n");
            ListEntry("Formato do comando", "flag:4>RESPOSTA1(maiúsculo),RESPOSTA2(maiúsculo)");
            return response;
        }

        if(args[0] == "flag:4>UBUNTU,GETUPGRADE") 
        {

            LoadTitle("asciiparabens.txt", "verde", 2);
            response.Add("> Você conseguiu identificar as vulnerabilidades do sistema do Banco Nacional de Cyberfield!");
            response.Add("> Agora você pode relatar as brechas que você encontrou para o Diretor Alfred.");
            response.Add("> Aqui está seu código final: 981713");
            response.Add("\r\n");
            response.Add("Digite '/sair' para fechar o terminal...");
            return response;
        }
        
        if(args[0] == "/sair")
        {
            response.Add("> Até mais!");

            SceneManager.LoadScene("Banco", LoadSceneMode.Single);
            SceneManager.LoadScene("Essential", LoadSceneMode.Additive);
            
            return response;
        }

        if(args[0] == "/tutorial")
        {
            response.Add("O jogo é dividido em 4 flags e 7 desafios no total:");
            response.Add("\r\n");
            response.Add("NMAP - Escanear portas (redes)");
            response.Add("Flag: 1 - possui 2 desafios");
            response.Add("\r\n");
            response.Add("TCP - Transferir arquivos");
            response.Add("Flag: 2 - possui 2 desafios");
            response.Add("\r\n");
            response.Add("MD5 - Criptografia");
            response.Add("Flag: 3 - possui 1 desafio");
            response.Add("\r\n");
            response.Add("SSH - Acessar o sistema remotamente");
            response.Add("Flag: 4 - possui 2 desafios");
            response.Add("\r\n");

            response.Add("Cada parte possui uma flag com questões para responder e prosseguir com o desafio de CTF.");
            response.Add("No final do jogo, você receberá um código final para acessar o escritório do Diretor Alfred.");

            response.Add("\r\n");
            ListEntry("AVISO IMPORTANTE", "Preste muita atenção nos formatos de comando");
            ListEntry("AVISO IMPORTANTE", "As respostas das flags podem ser númericas (ex: 5) e a formatação das palavras será indicada no 'formato do comando'");
            
            return response;
        }

        if(args[0] == "/ip")
        {
            response.Add("162.241.42.60");
            
            return response;
        }

        if(args[0] == "/ajuda")
        {   
            response.Add("\r\n");
            ListEntry("/tutorial", "instruções do jogo");
            ListEntry("/ip","ip do banco nacional");
            ListEntry("/sair", "sair do jogo");
            response.Add("\r\n");

            return response;
        }
        else
        {
            response.Add("Comando inválido. Tente novamente.");

            return response;
        }

        

        /* if(args[0] == "/iniciar")
        {
            LoadTitle("ascii.txt", "vermelho", 2);

            return response;
        } */


    }

    public string ColorString(string s, string color)
    {
        string leftTag = "<color=" + color + ">";
        string rightTag = "</color>";

        return leftTag + s + rightTag;
    }

    void ListEntry(string a, string b)
    {
        response.Add(ColorString(a, colors["laranja"]) + ": " + ColorString(b, colors["amarelo"]));
    }

    void LoadTitle(string path, string color, int spacing)
    {
        StreamReader file = new StreamReader(Path.Combine(Application.streamingAssetsPath, path));

        for(int i = 0; i < spacing; i ++)
        {
            response.Add("");
        }

        while(!file.EndOfStream)
        {
            response.Add(ColorString(file.ReadLine(), colors[color]));
        }

        for(int i = 0; i < spacing; i++)
        {
            response.Add("");
        }

        file.Close();
    }
}
